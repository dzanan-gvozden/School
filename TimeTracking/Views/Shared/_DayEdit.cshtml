@model TimeTracking.Models.DayModel

<div class="form1 container-fluid col-xs-offset-2 col-xs-8">
    <h2 class="username">@Model.PersonName</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">

            <h4>Day</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Person)


            <div class="form-group">
                <div class="username control-label col-md-2">@Html.LabelFor(model => model.Date)</div>

                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date,
                new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "",
                new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                <div class="username control-label col-md-2">@Html.LabelFor(model => model.WorkTime)</div>

                <div class="col-md-10">
                    @Html.EditorFor(model => model.WorkTime,
                new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WorkTime, "",
                new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">

                    <div class="control-label col-md-2">@Html.LabelFor(model => model.WorkTime)</div>

                    <div class="col-md-10">
                        @Html.EditorFor(model => model.WorkTime,
                        new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WorkTime, "",
                        new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">

                <div class="username control-label col-md-2">@Html.LabelFor(model => model.PtoTime)</div>

                <div class="col-md-10">
                    @Html.EditorFor(model => model.PtoTime,
                new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PtoTime, "",
                new { @class = "text-danger" })
                </div>
            </div>

            <div class="username form-group">
                @Html.LabelFor(model => model.EntryStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.EntryStatus, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EntryStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    <input type="submit" value="Save" class="btn btn-default" />

                    <div>
                        @Html.ActionLink("Back to List", "Days/" + Model.Person, "TimeTracking")
                        @*@Html.ActionLink("Back to List", "", new { id = Model.Person })*@

                    </div>
                </div>
            </div>
        </div>

    }
</div>


